<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.managesolution.mapper.MemberShipMapper">
    <insert id="saveMembership" parameterType="Membership">
        INSERT INTO membership (memberId, productId, startDate, endDate, price, created_at, isActive)
        VALUES (#{memberId}, #{productId}, #{startDate}, #{endDate}, #{price}, #{createdAt},#{isActive})
    </insert>

    <update id="deactivateByMemberId" parameterType="long">
        UPDATE membership
        SET isActive = false
        WHERE memberId = #{memberId}
        AND isActive = true
    </update>

    <update id="activateByMemberId" parameterType="long">
        UPDATE membership
        SET isActive = true
        WHERE memberId = #{memberId}
          AND isActive = false
    </update>


        <update id="updateMembership" parameterType="Membership">
        UPDATE membership
        SET productId       = #{productId},
            startDate       = #{startDate},
            endDate         = #{endDate},
            price           = #{price}
        WHERE memberId = #{memberId}
    </update>

    <select id="findByMemberId" parameterType="long" resultType="Membership">
        SELECT top 1 memberId, productId, startDate, endDate, price
        FROM membership
        where memberId = #{memberId}
        ORDER BY endDate DESC
    </select>

    <update id="updatePaymentId">
        UPDATE membership
        SET paymentId = #{paymentId}
        WHERE memberId = #{memberId} AND paymentId IS NULL
    </update>

    <select id="selectMembershipMembers" resultType="MembershipSalesDTO">
        SELECT
            p.name AS productName,
            COUNT(ms.membershipId) AS count,
            COALESCE(p.price, 0) AS unitPrice,
            COALESCE(SUM(ms.price), 0) AS totalAmount
        FROM product p
                 LEFT JOIN membership ms
                           ON ms.productId = p.productId
                               AND ms.startDate BETWEEN #{startDate} AND #{endDate}
        WHERE p.type = 'MEMBERSHIP'
        GROUP BY p.name, p.price
        ORDER BY p.name
    </select>

    <select id="findExpiringMemberAll" resultType="ImminentCareDTO">
        SELECT
            m.name AS memberName,
            m.phone AS phone,
            p.name AS productName,
            '-' AS remainingCount,
            ms.endDate AS endDate
        FROM membership ms
                 JOIN member m ON ms.memberId = m.memberId
                 JOIN product p ON ms.productId = p.productId
        WHERE ms.isActive = TRUE
          AND ms.endDate BETWEEN CURRENT_DATE AND DATEADD('DAY', 7, CURRENT_DATE)
          AND ms.paymentId IS NOT NULL
        UNION ALL
        SELECT
            m.name AS memberName,
            m.phone AS phone,
            p.name AS productName,
            CAST(pp.totalCount - pp.remainingCount AS CHAR) AS remainingCount,
            pp.endDate AS endDate
        FROM pt_package pp
                 JOIN member m ON pp.memberId = m.memberId
                 JOIN product p ON pp.productId = p.productId
        WHERE pp.isActive = TRUE
          AND pp.endDate BETWEEN CURRENT_DATE AND DATEADD('DAY', 7, CURRENT_DATE)
          AND pp.paymentId IS NOT NULL
        ORDER BY endDate ASC
    </select>

    <select id="findExpiringMemberByName" resultType="ImminentCareDTO">
        SELECT
            m.name AS memberName,
            m.phone AS phone,
            p.name AS productName,
            '-' AS remainingCount,
            ms.endDate AS endDate
        FROM membership ms
                 JOIN member m ON ms.memberId = m.memberId
                 JOIN product p ON ms.productId = p.productId
        WHERE ms.isActive = TRUE
          AND ms.endDate BETWEEN CURRENT_DATE AND DATEADD('DAY', 7, CURRENT_DATE)
          AND m.name LIKE CONCAT(#{keyword}, '%')
          AND ms.paymentId IS NOT NULL
        UNION ALL
        SELECT
            m.name AS memberName,
            m.phone AS phone,
            p.name AS productName,
            (pp.totalCount - pp.remainingCount) AS remainingCount,
            pp.endDate AS endDate
        FROM pt_package pp
                 JOIN member m ON pp.memberId = m.memberId
                 JOIN product p ON pp.productId = p.productId
        WHERE pp.isActive = TRUE
          AND pp.endDate BETWEEN CURRENT_DATE AND DATEADD('DAY', 7, CURRENT_DATE)
          AND m.name LIKE CONCAT(#{keyword}, '%')
          AND pp.paymentId IS NOT NULL
        ORDER BY endDate ASC
    </select>

    <select id="findExpiringMemberByPhone" resultType="ImminentCareDTO">
        SELECT
            m.name AS memberName,
            m.phone AS phone,
            p.name AS productName,
            '-' AS remainingCount,
            ms.endDate AS endDate
        FROM membership ms
                 JOIN member m ON ms.memberId = m.memberId
                 JOIN product p ON ms.productId = p.productId
        WHERE ms.isActive = TRUE
          AND ms.endDate BETWEEN CURRENT_DATE AND DATEADD('DAY', 7, CURRENT_DATE)
          AND m.phone LIKE CONCAT(#{keyword}, '%')
          AND ms.paymentId IS NOT NULL
        UNION ALL
        SELECT
            m.name AS memberName,
            m.phone AS phone,
            p.name AS productName,
            (pp.totalCount - pp.remainingCount) AS remainingCount,
            pp.endDate AS endDate
        FROM pt_package pp
                 JOIN member m ON pp.memberId = m.memberId
                 JOIN product p ON pp.productId = p.productId
        WHERE pp.isActive = TRUE
          AND pp.endDate BETWEEN CURRENT_DATE AND DATEADD('DAY', 7, CURRENT_DATE)
          AND m.phone LIKE CONCAT(#{keyword}, '%')
          AND pp.paymentId IS NOT NULL
        ORDER BY endDate ASC
    </select>

    <delete id="deleteUnpaidMembership">
        DELETE FROM membership
        WHERE memberId = #{memberId}
          AND isActive = FALSE
          AND paymentId IS NULL
    </delete>

    <delete id="deleteMemberShipByMemberId">
        DELETE FROM membership
        WHERE memberId = #{memberId}
          AND isActive = FALSE
    </delete>

</mapper>
